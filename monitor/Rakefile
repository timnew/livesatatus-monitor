require 'socket'
require 'pry'
require './lib/livestatus_monitor'
require 'serialport'
require 'colorist'

def run(port_file, options)
	options.symbolize_keys!

	#'/dev/cu.usbserial-A9SZBD1X'
	port = SerialPort.new port_file, baud_rate: 9600, data_bits: 8, stop_bits: 1, parity: SerialPort::NONE

	# request = Request
	#   .get('services')
	#   .filter('host_name = TW-BJ-ASA')
	#   .filter('description = check_snmp_asa_traffic_bps_with_error')
	#   .column(%w{host_name description state perf_data})
	#   .column_headers(true)
	#   .output_format(:json)

	# request = Request
	#   .get('services')
	#   .filter('host_name = PEK_FW_1')
	#   .filter('description = check_asa_traffic_outside2')
	#   .column(%w{host_name description state perf_data})
	#   .column_headers(true)
	#   .output_format(:json)

	request = Request
	  .get('services')
	  .filter("host_name = #{options[:host]}")
	  .filter("description = #{options[:service]}")
	  .column(%w{host_name description state perf_data})
	  .column_headers(true)
	  .output_format(:json)


	while(true) do
		socket = TCPSocket.new options[:ip], 8060

		response = request.submit_and_parse(socket).first

		puts response.performance
		
		color = case response.performance[:in_percentage]
				when 0..69
					'lime'.to_color
				when 70..89
					'blue'.to_color
				when 89..100
					'red'.to_color
				end

		port.write "LED+RGB=#{color.r},#{color.g},#{color.b}\r"
		sleep(1)
	end
end


task :staging, :port do | _, args| 
	args.with_defaults port: '/dev/ttyUSB0'
	run args.port, host: 'TW-BJ-ASA', service: 'check_snmp_asa_traffic_bps_with_error', ip: '10.18.9.4'
end

task :production, :port do | _, args| 
	args.with_defaults port: '/dev/ttyUSB0'
	run args.port, host: 'PEK_FW_1', service: 'check_asa_traffic_outside2', ip: '10.18.9.5'
end



